{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "20A49395-7DA7-4D9C-A567-76BC209D4AC9",
  "name": "GitHubAuthenticatedScript",
  "friendlyName": "GitHub Authenticated Script",
  "description": "A script task that launches with an authenticated GitHub Cli session created",
  "helpMarkDown": "",
  "category": "Utility",
  "author": "NzKyle",
  "version": {
    "Major": 0,
    "Minor": 1,
    "Patch": 31
  },
  "instanceNameFormat": "GitHub Authenticated Script",
  "inputs": [
    {
      "name": "gitHubServiceConnection",
      "type": "connectedService:github",
      "label": "GitHub Service Connection",
      "required": true,
      "helpMarkDown": "Specify the name of the GitHub service connection to use to connect to the GitHub repository. The connection must be based on a GitHub user's OAuth or a GitHub personal access token. Learn more about service connections [here](https://aka.ms/AA3am5s).",
      "properties": {
        "EndpointFilterRule": ""
      }
    },
    {
      "name": "scriptType",
      "type": "pickList",
      "label": "Script Type",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
      "options": {
        "ps": "PowerShell",
        "pscore": "PowerShell Core",
        "batch": "Batch",
        "bash": "Shell"
      }
    },
    {
      "name": "scriptLocation",
      "type": "pickList",
      "label": "Script Location",
      "defaultValue": "scriptPath",
      "required": true,
      "helpMarkDown": "Path to script: File path or Inline script",
      "options": {
        "inlineScript": "Inline script",
        "scriptPath": "Script path"
      }
    },
    {
      "name": "scriptPath",
      "type": "filePath",
      "label": "Script Path",
      "defaultValue": "",
      "required": true,
      "visibleRule": "scriptLocation = scriptPath",
      "helpMarkDown": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory"
    },
    {
      "name": "inlineScript",
      "type": "multiLine",
      "label": "Inline Script",
      "defaultValue": "",
      "required": true,
      "visibleRule": "scriptLocation = inlineScript",
      "helpMarkDown": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
      "properties": {
        "resizable": true,
        "rows": "10",
        "maxLength": "5000"
      }
    },
    {
      "name": "scriptArguments",
      "aliases": [
        "arguments"
      ],
      "type": "string",
      "label": "Script Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Arguments passed to the script",
      "properties": {
        "editorExtension": "ms.vss-services-azure.parameters-grid"
      }
    },
    {
      "name": "powerShellErrorActionPreference",
      "type": "pickList",
      "label": "ErrorActionPreference",
      "required": false,
      "defaultValue": "stop",
      "options": {
        "stop": "Stop",
        "continue": "Continue",
        "silentlyContinue": "SilentlyContinue"
      },
      "visibleRule": "scriptType = ps || scriptType = pscore",
      "helpMarkDown": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script."
    },
    {
      "name": "cwd",
      "aliases": [
        "workingDirectory"
      ],
      "type": "filePath",
      "label": "Working Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Current working directory where the script is run.  Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory)",
      "groupName": "advanced"
    },
    {
      "name": "failOnStandardError",
      "type": "boolean",
      "label": "Fail on Standard Error",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "If this is true, this task will fail when any errors are written to the StandardError stream. Unselect the checkbox to ignore standard errors and rely on exit codes to determine the status",
      "groupName": "advanced"
    },
    {
      "name": "powerShellIgnoreLASTEXITCODE",
      "type": "boolean",
      "label": "Ignore $LASTEXITCODE",
      "required": false,
      "defaultValue": "false",
      "visibleRule": "scriptType = ps || scriptType = pscore",
      "helpMarkDown": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not appended to the end of your script.",
      "groupName": "advanced"
    }
  ],
  "execution": {
    "Node20_1": {
      "target": "ghauthtask.js"
    }
  },
  "messages": {
    "ScriptReturnCode": "Script exited with return code: %d",
    "ScriptFailed": "Script failed with error: %s",
    "ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
    "ScriptFailedWithExitCode": "Script failed with exit code: %d",
    "JS_InvalidFilePath": "Script file could not be found at specified script location: '%s'. Please verify the script exists at the specified path. If you want to use inline script, specify input `Script Location` as `inlineScript`.",
    "JS_InvalidErrorActionPreference": "Invalid ErrorActionPreference '%s'. The value must be one of: 'Stop', 'Continue', or 'SilentlyContinue'",
    "UnacceptedScriptLocationValue": "%s is not a valid value for task input 'Script Location' (scriptLocation in YAML). Value can either be 'inlineScript' or 'scriptPath'"
  }
}